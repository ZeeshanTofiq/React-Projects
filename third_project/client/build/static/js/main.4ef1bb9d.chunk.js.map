{"version":3,"sources":["api/streams.js","components/streamForm.js","components/StreamCreate.js","actions/index.js","actions/types.js","components/StreamDelete.js","components/StreamEdit.js","components/StreamList.js","components/StreamShow.js","components/GoogleOath.js","components/Header.js","history.js","components/App.js","reducers/AuthReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","streamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","StreamCreate","reduxForm","form","validate","errors","title","description","formProps","createStream","connect","formsValues","dispatch","getState","a","userId","auth","streams","post","response","type","payload","data","StreamDelete","StreamEdit","StreamList","fetchStreams","console","log","state","Object","values","get","StreamShow","GoogleOath","onAuthChange","status","SignIn","currentUser","getId","SignOut","onSignOut","signOut","onSignIn","signIn","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","isSignedIn","listen","onClick","Headers","style","to","display","justifyContent","createHistory","App","history","Header","path","exact","initialVal","combineReducers","action","formReducer","_","mapKeys","id","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ef1bb9d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://localhost:3001'\n});\n\n\n\n// import axios from \"axios\";\n\n// export default axios.create({\n//     baseURL:'http://localhost:3001'\n// });\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass streamForm extends React.Component {\n\n    renderError({ error, touched }) {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    onSubmit = formValues => {\n        this.props.onSubmit(formValues);\n    };\n\n    render() {\n        return (\n            <form\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n                className=\"ui form error\">\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n\n    if (!formValues.title) {\n        errors.title = 'You must enter a title';\n    }\n\n    if (!formValues.description) {\n        errors.description = 'You must enter a description';\n    }\n\n    return errors;\n};\n\nexport default reduxForm({\n    form: 'streamForm',\n    validate\n})(streamForm);\n","import React from 'react';\nimport { createStream  } from '../actions';\nimport { connect } from 'react-redux';\nimport streamForm from './streamForm';\n\nclass StreamCreate extends React.Component {\n    \n    onSubmit= formProps=> {\n        this.props.createStream(formProps);\n    \n    }\n    render() {\n        return (\n            <div className=\"ui container mt-4\">\n                <h1>Create Stream</h1>\n                <streamForm onSubmit={this.onSubmit} />\n            </div>\n        );\n    }\n}\n\n\nexport default connect(null, { createStream })(StreamCreate);","import streams from '../api/streams';\nimport { formValues } from 'redux-form';\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from './types';\n\n\nexport const SignIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: { userId }\n    }\n}\n\nexport const SignOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = formsValues => async (dispatch ,getState)=> {\n    const { userId } = getState().auth;\n    const response = await streams.post('/streams', {...formValues,userId})\n\n    dispatch({ type: CREATE_STREAM, payload: response.data });\n}\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n}\n\nexport const fetchStream = id => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n}\n\nexport const deleteStream = id => async dispatch => {\n    await streams.delete('/streams/${id}');\n\n    dispatch({ type: DELETE_STREAM, payload: id });\n}","export const SIGN_IN = 'SIGN_IN';\n\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const CREATE_STREAM = 'CREATE-STREAM';\n\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\n\nexport const FETCH_STREAM = 'FETCH_STREAM';\n\nexport const DELETE_STREAM = 'DELETE_STREAM';\n\nexport const EDIT_STREAM = 'EDIT_STREAM';","import React from 'react';\n\nconst StreamDelete = ()=> {\n    return (\n        <div>\n            <h1>StreamDelete</h1>\n        </div>\n    );\n}\n\nexport default StreamDelete;","import React from 'react';\n\nconst StreamEdit = ()=> {\n    return (\n        <div>\n            <h1>StreamEdit</h1>\n        </div>\n    );\n}\n\nexport default StreamEdit;","import React from 'react';\nimport { fetchStreams } from '../actions';\nimport { connect } from 'react-redux';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    render() {\n        console.log(this.props.streams);\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        streams:Object.values(state.streams)\n    };\n};\n\nexport default connect(mapStateToProps,{ fetchStreams })(StreamList);","import React from 'react';\n\nconst StreamShow = ()=> {\n    return (\n        <div>\n            <h1>StreamShow</h1>\n        </div>\n    );\n}\n\nexport default StreamShow;","import React from 'react';\nimport { SignIn , SignOut } from '../actions';\nimport { connect } from 'react-redux';\n\nclass GoogleOath extends React.Component {\n    componentDidMount(){\n\n        window.gapi.load('client:auth2', ()=> {\n            window.gapi.client.init({\n                clientId: '694624619304-v1po8r5r3p3ukjtndgquuhm5oaictf3d.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(()=>{\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            })\n        })\n    }\n\n    onAuthChange =(status)=>{\n        if (status){\n            this.props.SignIn(this.auth.currentUser.get().getId());\n        }\n        else{\n            this.props.SignOut();\n        }\n    }\n\n    onSignOut=() => {\n        this.auth.signOut();\n    }\n\n    onSignIn=()=> {\n        this.auth.signIn();\n    }\n    \n    render() {\n        if (this.props.auth.isSignedIn === null) {\n            return null;\n        }\n        else if (this.props.auth.isSignedIn) {\n            return (\n                <button onClick={this.onSignOut} className=\"btn btn-danger-outline\"> SignOut</button>\n            );\n        }\n        else {\n            return (\n                <button onClick={this.onSignIn} className=\"btn btn-danger-outline\">SignIn</button>\n            )\n        };\n    }\n}\n\nconst mapStateToProps = state=>{\n    return {\n        auth:state.auth\n    }\n}\n\nexport default connect(mapStateToProps ,{SignIn,SignOut})(GoogleOath);","import React from 'react';\n// import './Header.css';\nimport GoogleAuth from './GoogleOath';\nimport { Link } from 'react-router-dom';\n\nclass Headers extends React.Component {\n    render() {\n        return (\n            <div className=\"Header navbar navbar-light bg-light\" style={{}}>\n                <div className=\"Header--heading\">\n                    <Link className=\"navbar-brand\" to=\"/\">Stream</Link>\n                </div>\n                <div className=\"Header--links\">\n                    <ul className=\"navbar-nav\" style={{display:'flex' ,justifyContent:'center'}}>\n                        <li className=\"navbar-item\">\n                            <Link className=\"Heading--links-AllStream nav-link\" to=\"/show\">All Stream</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <GoogleAuth />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Headers;","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();","import React from 'react';\nimport {Router, Route } from 'react-router-dom';\nimport StreamCreate from './StreamCreate';\nimport StreamDelete from './StreamDelete';\nimport StreamEdit from './StreamEdit';\nimport StreamList from './StreamList';\nimport StreamShow from './StreamShow';\nimport Header from './Header';\nimport history from '../history';\n\nclass App extends React.Component {\n    render(){\n        return (\n            <div>\n                <Router history={ history }>\n                    <Header />\n                    <Route path='/' exact={true} component={StreamList} />\n                    <Route path='/new' exact={true} component={StreamCreate} />\n                    <Route path='/edit' exact={true} component={StreamDelete} />\n                    <Route path='/delete' exact={true} component={StreamEdit} />\n                    <Route path='/show' exact={true} component={StreamShow} />\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;","import {\n    SIGN_IN,\n    SIGN_OUT\n} from '../actions/types';\n\n\nconst initialVal = {\n    isSignedIn: null,\n    userId: null\n}\n\n\nexport default (state = initialVal, action) => {\n    if (action.type === SIGN_IN) {\n        return { ...state, isSignedIn: true, userId: action.payload.userId };\n    }\n    else if (action.type === SIGN_OUT){\n        return { ...state, isSignedIn: false, userId: null };\n    }\n    return state;\n}","import {combineReducers} from 'redux';\nimport AuthReducer from './AuthReducer';\nimport {reducer as formReducer} from 'redux-form';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n    auth:AuthReducer,\n    form:formReducer,\n    streams:streamReducer   \n});","import _ from 'lodash';\nimport {\n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from '../actions/types';\n\nexport default (state={},action)=>{\n    switch(action.type){\n        case FETCH_STREAMS:\n            return {...state,..._.mapKeys(action.payload,'id')};\n        case EDIT_STREAM:\n            return {...state ,[action.payload.id]:action.payload};\n        case FETCH_STREAM:\n            return {...state ,[action.payload.id]:action.payload};\n        case CREATE_STREAM:\n            return {...state ,[action.payload.id]:action.payload};\n        case DELETE_STREAM:\n            return _.omit(state,action.payload);\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\nimport { createStore, applyMiddleware ,compose} from 'redux';\nimport { Provider } from 'react-redux';\nimport  thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDom.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}